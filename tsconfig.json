{
  "compilerOptions": {
    "target": "es5", /* 编译后的目标 */
    "lib": [  /* 添加需要的解析的语法，否则TS会检测出错 */
      "dom", /* dom运行环境 */
      "dom.iterable", /* 迭代器运行环境 */
      "esnext" /* es6转化成es5的环境 */
    ],
    "strict": true, /* strict的值为true或false，用于指定是否启动所有类型检查，如果设为true则会同时开启下面这几个严格类型检查，默认为false */
    "allowJs": true, /* allowJs设置的值为true或false，用来指定是否允许编译js文件，默认是false，即不编译js文件 */
    "skipLibCheck": true,  /* 对库定义文件跳过类型检查（2.0 以上） */
    "esModuleInterop": true, /* 通过为导入内容创建命名空间，实现CommonJS和ES模块之间的互操作性 */
    "allowSyntheticDefaultImports": true, /* 用来指定允许从没有默认导出的模块中默认导入 */
    "module": "esnext", /* 用来指定编译后的js要使用的模块标准: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext' */
    "moduleResolution": "node", /* 用于选择模块解析策略，有'node'和'classic'两种类型 */
    "resolveJsonModule": true, /* 是否允许把json文件当做模块进行解析 */
    "isolatedModules": true, /* 每个文件需要是一个模块 */
    "noEmit": true, /* 不需要生成文件 */
    "jsx": "react-jsx"
  },
  "include": [
    "src" /* 处理src目录下的文件 */
  ]
}
